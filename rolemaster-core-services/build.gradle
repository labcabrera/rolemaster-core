plugins {
	id 'org.springframework.boot'        version '2.6.7' apply false
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.sonarqube'                   version '2.8'
	id 'java'
	id 'jacoco'
}

ext {
	set('springdocVersion',            '1.6.6')
}

group = 'org.labcabrera.rolemaster'
version = version
sourceCompatibility = '16'

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation project(':rolemaster-core-model')
	implementation project(':rolemaster-core-dto')

	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

	implementation "org.springdoc:springdoc-openapi-webflux-ui:${springdocVersion}"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
	}
}

sonarqube {
	properties {
		property "sonar.host.url",          System.getenv('SONARQUBE_URL')
		property "sonar.login",             System.getenv('SONARQUBE_USERNAME')
		property "sonar.password",          System.getenv('SONARQUBE_PASSWORD')
	}
}
